--- a/meson.build
+++ b/meson.build
@@ -25,11 +25,7 @@
 # the wrong result when systemd is being built as a meson subproject
 project_source_root = meson.current_source_dir()
 project_build_root = meson.current_build_dir()
-relative_source_path = run_command('realpath',
-                                   '--relative-to=@0@'.format(project_build_root),
-                                   project_source_root,
-                                   check : true).stdout().strip()
-conf.set_quoted('RELATIVE_SOURCE_PATH', relative_source_path)
+conf.set_quoted('RELATIVE_SOURCE_PATH', '..')

 conf.set10('BUILD_MODE_DEVELOPER', get_option('mode') == 'developer',
            description : 'tailor build to development or release builds')
@@ -716,10 +712,6 @@
 endforeach

 conf.set_quoted('TELINIT', get_option('telinit-path'))
-
-if run_command(ln, '--relative', '--help', check : false).returncode() != 0
-        error('ln does not support --relative (added in coreutils 8.16)')
-endif

 ############################################################

--- a/tools/meson-make-symlink.sh
+++ b/tools/meson-make-symlink.sh
@@ -15,8 +15,4 @@
 # and we need to create the target directory...

 mkdir -${VERBOSE}p "$(dirname "${DESTDIR:-}$TARGET")"
-if [ "$(dirname "$SOURCE")" = . ] || [ "$(dirname "$SOURCE")" = .. ]; then
-    ln -${VERBOSE}fs -T -- "$SOURCE" "${DESTDIR:-}$TARGET"
-else
-    ln -${VERBOSE}fs -T --relative -- "${DESTDIR:-}$SOURCE" "${DESTDIR:-}$TARGET"
-fi
+ln -${VERBOSE}fs -T -- "$SOURCE" "${DESTDIR:-}$TARGET"
--- a/units/meson-add-wants.sh
+++ b/units/meson-add-wants.sh
@@ -35,7 +35,7 @@
             ;;
     esac

-    ln -${VERBOSE}fs --relative "$unitpath" "$dir"
+    ln -${VERBOSE}fs "${unitpath##${DESTDIR:-}}" "$dir"

     i=$((i + 3))
 done
